{"version":3,"file":"static/js/350.b8901880.chunk.js","mappings":"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","sources":["components/FormRegistration/FormRegistration.styled.jsx","components/FormRegistration/FormRegistration.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #cccccc;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  background-color: #ffffff;\n`;\n\nexport const FormTitle = styled.h2`\n  text-align: center;\n  color: #333333;\n`;\n\nexport const InputLabel = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  color: #000000;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 15px;\n  font-size: 16px;\n  box-sizing: border-box;\n  border: 2px solid #cccccc;\n  border-radius: 4px;\n  outline: transparent;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border-color: #007bff;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: #ffffff;\n  font-size: 18px;\n  padding: 8px 18px;\n  border-radius: 6px;\n  transition: box-shadow 0.3s ease 0s, background-color 0.3s ease 0s;\n\n  &:hover,\n  &:focus {\n    background-color: #024ac5;\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px;\n  }\n`;\n\nexport const ButtonLink = styled.button`\n  display: block;\n  text-align: center;\n  margin: 20px auto;\n  padding: 0;\n  color: #007bff;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #024ac5;\n  }\n`;\n\nexport const PasswordToggleContainer = styled.div`\n  position: relative;\n`;\n\nexport const PasswordInputField = styled(InputField)`\n  display: flex;\n`;\n\nexport const PasswordToggleIcon = styled.span`\n  position: absolute;\n  z-index: 2;\n  right: 5px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n","import { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { register } from '../../redux/auth/operations';\nimport {\n  FormContainer,\n  FormTitle,\n  InputLabel,\n  InputField,\n  SubmitButton,\n  ButtonLink,\n  PasswordToggleContainer,\n  PasswordInputField,\n  PasswordToggleIcon,\n} from './FormRegistration.styled';\nimport { useState } from 'react';\n\nconst FormRegistration = () => {\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleTogglePassword = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    const name = form.elements.name.value;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={handleSubmit}>\n        <FormTitle>Register</FormTitle>\n        {/* <Link to=\"/\">\n          <ButtonLink type=\"button\"> Go home </ButtonLink>\n        </Link> */}\n\n        <InputLabel htmlFor=\"name\">Name</InputLabel>\n        <InputField\n          type=\"text\"\n          id=\"name\"\n          placeholder=\"Enter your name\"\n          pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' \\-][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer\"\n          autoComplete=\"off\"\n          required\n        />\n\n        <InputLabel htmlFor=\"email\">Email</InputLabel>\n        <InputField\n          type=\"email\"\n          id=\"email\"\n          placeholder=\"Enter your email address\"\n          pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\"\n          title=\"Please enter a valid email address\"\n          autoComplete=\"off\"\n          required\n        />\n\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <PasswordToggleContainer>\n          <PasswordInputField\n            type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            placeholder=\"Enter your password\"\n            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\"\n            title=\"Password must contain at least eight or more characters (one number, one uppercase and lowercase letter)\"\n            autoComplete=\"off\"\n            required\n          />\n          <PasswordToggleIcon onClick={handleTogglePassword}>\n            {showPassword ? 'üôà' : 'üëÅÔ∏è'}\n          </PasswordToggleIcon>\n        </PasswordToggleContainer>\n\n        <SubmitButton>Register</SubmitButton>\n        <Link to=\"/login\">\n          <ButtonLink>Already have an account? Login</ButtonLink>\n        </Link>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default FormRegistration;\n","import FormRegistration from 'components/FormRegistration/FormRegistration';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { selectIsLoggedIn } from '../../redux/auth/selectors';\n\nconst RegistrationPage = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    isLoggedIn && navigate('/');\n  }, [isLoggedIn, navigate]);\n\n  return <FormRegistration />;\n};\n\nexport default RegistrationPage;\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","FormTitle","_templateObject2","InputLabel","_templateObject3","InputField","_templateObject4","SubmitButton","_templateObject5","ButtonLink","_templateObject6","PasswordToggleContainer","_templateObject7","PasswordInputField","_templateObject8","PasswordToggleIcon","_templateObject9","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","children","_jsxs","onSubmit","e","preventDefault","form","target","name","elements","value","email","password","register","reset","htmlFor","type","id","placeholder","pattern","title","autoComplete","required","onClick","prevShowPassword","Link","to","isLoggedIn","useSelector","selectIsLoggedIn","navigate","useNavigate","useEffect","FormRegistration"],"sourceRoot":""}